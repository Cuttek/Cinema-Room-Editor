@page "/database"
@using DataAccessLibrary
@using DataAccessLibrary.Models
@inject ICinemaData _db
@inject NavigationManager NavigationManager

<div class="p-4">
    <h3>List of rooms in database</h3>
    @if (screeningRoomsData is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table table-sm table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Name</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var room in screeningRoomsData)
                {
                    <tr>
                        <td>@room.Id</td>
                        <td>@room.Name</td>
                        <td>
                            <span>
                                <button class="btn btn-primary" @onclick="()=>RedirectToEditor(room)">Edit</button>
                                <button class="btn btn-danger" @onclick="()=>DeleteRoom(room)">Delete</button>
                            </span>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }
</div>
@code {
    List<RoomModel> screeningRoomsData;
    private async Task GetRooms()
    {
        screeningRoomsData = await _db.GetRooms();
    }
    private async Task DeleteRoom(RoomModel room)
    {
        await _db.DeleteRoom(room);
        await GetRooms();
    }
    protected override async Task OnInitializedAsync()
    {
        await GetRooms();
    }

    private void RedirectToEditor(RoomModel room)
    {
        NavigationManager.NavigateTo("Creator/" + room.Id);
    }

}
